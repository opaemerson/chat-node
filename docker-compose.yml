version: '3.8'

services:
  websocket-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - .:/usr/src/app
    command: ["node", "server.js"]
    networks:
      - chat-network

  web-server:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
      - ./css:/usr/share/nginx/html/css
      - ./js:/usr/share/nginx/html/js
      - ./images:/usr/share/nginx/html/images
    networks:
      - chat-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: chatdb
      MYSQL_USER: chatuser
      MYSQL_PASSWORD: chatpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - chat-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: chatuser
      PMA_PASSWORD: chatpassword
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - mysql
    networks:
      - chat-network

volumes:
  mysql_data:

networks:
  chat-network:
    driver: bridge